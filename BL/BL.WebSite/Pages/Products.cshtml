@page
@model BL.WebSite.Pages.ProductsModel
@{
    ViewData["Title"] = "Products";
}

<h1>Products List</h1>

<table id="productsTable" class="table table-hover" style="margin-bottom: 40px;">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<form id="editProductForm" style="display: none;">
    <h2 style="margin-top: 40px;">Edit Product</h2>
    <input type="hidden" id="editProductId" />
    <div class="mb-3">
        <label for="editProductName" class="form-label">Name:</label>
        <input type="text" class="form-control" id="editProductName" />
    </div>
    <div class="mb-3">
        <label for="editProductPrice" class="form-label">Price:</label>
        <input type="number" class="form-control" step="0.01" id="editProductPrice" />
    </div>
    <div class="mb-3">
        <label for="editProductDescription" class="form-label">Description:</label>
        <textarea class="form-control" id="editProductDescription"></textarea>
    </div>
    <div>
        <button type="button" class="btn btn-success" id="saveEdit">Save</button>
        <button type="button" class="btn btn-default" id="cancelEdit">Cancel</button>
    </div>
    
</form>




<h2 style="margin-top: 40px;">Add New Product</h2>

<form id="addProductForm">
    <div class="mb-3">
        <label for="productName" class="form-label">Name:</label>
        <input type="text" class="form-control" id="productName" name="name" required />
    </div>
    <div class="mb-3">
        <label for="productPrice" class="form-label">Price:</label>
        <input class="form-control"  type="number" step="0.01" id="productPrice" name="price" required />
    </div>
    <div class="mb-3">
        <label for="productDescription" class="form-label">Description:</label>
        <textarea class="form-control" id="productDescription" name="description"></textarea>
    </div>
    <div>
        <button type="submit" class="btn btn-success">Add Product</button>
    </div>
</form>


@section Scripts{
    <script>

        $(document).ready(function () {

            function loadProducts() {
                $.ajax({
                    url: 'https://localhost:7264/products',
                    method: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')
                    },
                    success: function (productsResult) {
                        const productsTableBody = $("#productsTable tbody");
                        productsTableBody.empty();

                        if (productsResult && productsResult.products) {
                            productsResult.products.forEach(product => {
                                productsTableBody.append(`
                                <tr>
                                    <td>${product.id}</td>
                                    <td>${product.name}</td>
                                    <td>${product.price}</td>
                                    <td>${product.description}</td>
                                    <td>
                                        <button class="editProduct btn btn-primary" data-id="${product.id}">Edit</button>
                                        <button class="deleteProduct btn btn-danger" data-id="${product.id}">Delete</button>
                                    </td>
                                </tr>
                            `);
                            });
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status == 401) {
                            window.location.href = '/';
                        }
                        else {
                            let errorMessage = "Unexpected error.";

                            if (xhr.responseJSON && xhr.responseJSON.errorMessage) {
                                errorMessage = xhr.responseJSON.errorMessage;
                            }

                            alert(errorMessage);
                        }
                    }
                });
            }

            loadProducts();

            $("#addProductForm").submit(function (e) {
                e.preventDefault();

                const productData = {
                    name: $("#productName").val(),
                    price: parseFloat($("#productPrice").val()),
                    description: $("#productDescription").val()
                };

                $.ajax({
                    url: 'https://localhost:7264/products', 
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(productData),
                    success: function (response) {
                        alert('Product added successfully!');
                        location.reload(); 
                    },
                    error: function (xhr) {
                        let errorMessage = "Error adding product.";

                        if (xhr.responseJSON && xhr.responseJSON.errorMessage) {
                            errorMessage = xhr.responseJSON.errorMessage;
                        }

                        alert(errorMessage);
                    }
                });
            });

            $(document).on("click", ".editProduct", function () {
                const row = $(this).closest("tr");

                const productId = row.find("td:nth-child(1)").text();
                const productName = row.find("td:nth-child(2)").text();
                const productPrice = row.find("td:nth-child(3)").text();
                const productDescription = row.find("td:nth-child(4)").text();

                $("#editProductId").val(productId);
                $("#editProductName").val(productName);
                $("#editProductPrice").val(productPrice);
                $("#editProductDescription").val(productDescription);

                $("#editProductForm").slideDown();
            });

            $("#saveEdit").click(function () {
                const productId = $("#editProductId").val();
                const updatedProduct = {
                    id: productId,
                    name: $("#editProductName").val(),
                    price: $("#editProductPrice").val(),
                    description: $("#editProductDescription").val()
                };

                $.ajax({
                    url: 'https://localhost:7264/products/' + productId,
                    method: 'PUT',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(updatedProduct),
                    success: function (response) {
                        if (response && response.isSuccess) {
                            alert("Product updated successfully!");

                            loadProducts();
                            
                            $("#editProductForm").slideUp();
                        } else {
                            alert("Error updating product: " + response.errorMessage);
                        }
                    },
                    error: function (xhr) {
                        let errorMessage = "Unexpected error.";

                        if (xhr.responseJSON && xhr.responseJSON.errorMessage) {
                            errorMessage = xhr.responseJSON.errorMessage;
                        }

                        alert(errorMessage);
                    }
                });


            });

            $("#cancelEdit").click(function () {
                $("#editProductForm").slideUp();
            });

            $(document).on('click', '.deleteProduct', function () {
                const productId = $(this).data('id');
                if (confirm('Are you sure you want to delete this product?')) {
                    $.ajax({
                        url: `https://localhost:7264/products/${productId}`, 
                        method: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')
                        },
                        success: function () {
                            alert('Product deleted successfully!');
                            location.reload();
                        },
                        error: function (xhr) {
                            let errorMessage = "Error deleting product.";

                            if (xhr.responseJSON && xhr.responseJSON.ErrorMessage) {
                                errorMessage = xhr.responseJSON.ErrorMessage;
                            }

                            alert(errorMessage);
                        }
                    });
                }
            });

        })
    </script>
}